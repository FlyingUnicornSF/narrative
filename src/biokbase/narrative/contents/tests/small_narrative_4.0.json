{"info": [1, "Narrative.1423178116783", "KBaseNarrative.Narrative-4.0", "2016-01-26T04:44:07+0000", 14, "wjriehl", 476, "wjriehl:1423178116783", "32c5251bfe37ddd4c24587c70f92fa53", 35703, {"methods": "{\"ipython\": {\"code\": 6, \"markdown\": 3}, \"output\": 2, \"app\": {\"genome_assembly\": 1}, \"method\": {\"reannotate_microbial_genome\": 1}}", "format": "ipynb", "description": "", "creator": "wjriehl", "job_info": "{\"queue_time\": 0, \"running\": 0, \"completed\": 0, \"run_time\": 0, \"error\": 0}", "data_dependencies": "[]", "ws_name": "wjriehl:1423178116783", "type": "KBaseNarrative.Narrative", "name": "WS Line Magic"}], "created": "2016-01-26T04:44:07+0000", "refs": [], "provenance": [{"input_ws_objects": [], "description": "Saved by KBase Narrative Interface", "service": "narrative", "resolved_ws_objects": [], "external_data": [], "service_ver": "2.0.0"}], "creator": "wjriehl", "copy_source_inaccessible": 0, "data": {"nbformat_minor": 0, "nbformat": 4, "cells": [{"source": "A little function to fetch any Workspace object in the panel on the left by its name.", "cell_type": "markdown", "metadata": {"kbstate": {"title": "A little function to fetch any Workspace object in", "selected": false, "icon": ""}}}, {"source": "<div id='kb-cell-10-9f44be43-d344-464c-979a-d65f8cb67f14'></div>\n<script>$('#kb-cell-10-9f44be43-d344-464c-979a-d65f8cb67f14').kbaseNarrativeAppCell({'appSpec' : '{\"info\":{\"id\":\"genome_assembly\",\"name\":\"Assemble and Annotate Microbial Genome\",\"ver\":\"0.1.0\",\"subtitle\":\"Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\\n\",\"tooltip\":\"Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\\n\",\"header\":\"<p>The Assemble and Annotate Microbial Genome app assembles a set of Next-Generation Sequencing (NGS) short reads into contigs and then annotates the assembled contigs, calling genes and other genomic features and assigning biological functions. The user supplies a set of FASTA or FASTQ files of short reads and chooses from one of a variety of assembly algorithms. After the assembly, the contigs are automatically annotated by the KBase annotation pipeline, which includes assignment of biological functions derived from RAST (Rapid Annotations using Subsystems Technology). The resulting annotated genome can be exported in GenBank or FASTA format or used as input to other KBase apps such as Reconstruct Genome-scale Metabolic Model.</p>\\n\\n<p><a href=&quot;http://kbase.us/assemble-and-annotate-microbial-genome-app/&quot; target=&quot;_blank&quot;>Tutorial for Assemble and Annotate Microbial Genome App</a></p>\\n\",\"categories\":[\"featured_apps\"]},\"steps\":[{\"step_id\":\"step_1\",\"method_id\":\"assemble_contigset_from_reads\",\"input_mapping\":[],\"description\":\"additional instructions/details regarding the step with id step_1\\n\"},{\"step_id\":\"step_2\",\"method_id\":\"annotate_contigset\",\"input_mapping\":[{\"step_source\":\"step_1\",\"is_from_input\":1,\"from\":\"output_contigset\",\"to\":\"input_contigset\"}],\"description\":\"additional instructions/details regarding the step with id step_2\\n\"}]}', 'cellId' : 'kb-cell-10-9f44be43-d344-464c-979a-d65f8cb67f14'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Assemble and Annotate Microbial Genome", "icon": "<div class=\"fa-stack fa-2x\"><i  class=\"fa fa-square fa-stack-2x app-icon\"></i><i class=\"fa fa-inverse fa-stack-1x fa-cubes\"></i></div>"}, "kb-cell": {"app": {"info": {"subtitle": "Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\n", "name": "Assemble and Annotate Microbial Genome", "tooltip": "Assemble NGS reads into contigs and then perform structural and functional annotation of the assembled contigs.\n", "header": "<p>The Assemble and Annotate Microbial Genome app assembles a set of Next-Generation Sequencing (NGS) short reads into contigs and then annotates the assembled contigs, calling genes and other genomic features and assigning biological functions. The user supplies a set of FASTA or FASTQ files of short reads and chooses from one of a variety of assembly algorithms. After the assembly, the contigs are automatically annotated by the KBase annotation pipeline, which includes assignment of biological functions derived from RAST (Rapid Annotations using Subsystems Technology). The resulting annotated genome can be exported in GenBank or FASTA format or used as input to other KBase apps such as Reconstruct Genome-scale Metabolic Model.</p>\n\n<p><a href=\"http://kbase.us/assemble-and-annotate-microbial-genome-app/\" target=\"_blank\">Tutorial for Assemble and Annotate Microbial Genome App</a></p>\n", "ver": "0.1.0", "id": "genome_assembly", "categories": ["featured_apps"]}, "steps": [{"step_id": "step_1", "method_id": "assemble_contigset_from_reads", "description": "additional instructions/details regarding the step with id step_1\n", "input_mapping": []}, {"step_id": "step_2", "method_id": "annotate_contigset", "description": "additional instructions/details regarding the step with id step_2\n", "input_mapping": [{"to": "input_contigset", "is_from_input": 1, "from": "output_contigset", "step_source": "step_1"}]}]}, "type": "kb_app", "widget_state": [{"state": {"step": {"step_1": {"inputState": {"pipeline": null, "assembly_input": null, "description": null, "reference": null, "read_library": null, "assembler": null, "recipe": "auto", "output_contigset": ""}}, "step_2": {"inputState": {"domain": "B", "kmer_v1_parameters": 1, "genetic_code": "11", "call_features_CDS_prodigal": 1, "call_features_rRNA_SEED": 1, "call_features_insertion_sequences": 0, "call_features_strep_pneumo_repeat": 1, "call_selenoproteins": 1, "annotate_proteins_similarity": 1, "scientific_name": "", "find_close_neighbors": 1, "call_features_repeat_region_SEED": 1, "call_pyrrolysoproteins": 1, "call_features_strep_suis_repeat": 1, "call_features_crispr": 1, "annotate_proteins_kmer_v2": 1, "call_features_prophage_phispy": 0, "call_features_tRNA_trnascan": 1, "input_contigset": "", "call_features_CDS_glimmer3": 1, "output_genome": "", "resolve_overlapping_features": 1}}}, "runningState": {"appRunState": "input", "runningStep": null, "submittedText": ""}}, "time": 1453783446935}]}}}, {"source": "<div id='kb-cell-11-c6e9c978-a126-4c35-81a0-269c021de3c7'></div>\n<script>$('#kb-cell-11-c6e9c978-a126-4c35-81a0-269c021de3c7').kbaseNarrativeMethodCell({'method' : '{\"info\":{\"id\":\"reannotate_microbial_genome\",\"name\":\"Annotate Microbial Genome\",\"ver\":\"1.0.0\",\"subtitle\":\"Annotate or re-annotate bacterial or archaeal genome using RASTtk.\\n\",\"tooltip\":\"Annotate or re-annotate bacterial or archaeal genome using RASTtk.\\n\",\"icon\":{\"url\":\"img?method_id=reannotate_microbial_genome&image_name=icon.png\"},\"categories\":[\"active\"],\"authors\":[\"chenry\",\"olson\"],\"input_types\":[\"KBaseGenomes.Genome\"],\"output_types\":[\"KBaseGenomes.Genome\"],\"namespace\":null},\"replacement_text\":\"Annotated the microbial genome named {{{input_genome}}}\",\"widgets\":{\"input\":\"null\",\"output\":\"kbaseGenomeView\"},\"parameters\":[{\"id\":\"input_genome\",\"ui_name\":\"Genome\\n\",\"short_hint\":\"A genome (set of DNA contigs) including structural and functional annotations\\n\",\"description\":\"A genome (set of DNA contigs) including structural and functional annotations\\n\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":0,\"advanced\":0,\"disabled\":0,\"ui_class\":\"input\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseGenomes.Genome\"],\"is_output_name\":0,\"placeholder\":\"\",\"regex_constraint\":[]}},{\"id\":\"output_genome\",\"ui_name\":\"Output Genome Name\\n\",\"short_hint\":\"A genome with updated structural and functional annotations\\n\",\"description\":\"A genome with updated structural and functional annotations\\n\",\"field_type\":\"text\",\"allow_multiple\":0,\"optional\":1,\"advanced\":0,\"disabled\":0,\"ui_class\":\"output\",\"default_values\":[\"\"],\"text_options\":{\"valid_ws_types\":[\"KBaseGenomes.Genome\"],\"is_output_name\":1,\"placeholder\":\"Name to assign genome\\n\",\"regex_constraint\":[]}},{\"id\":\"call_features_rRNA_SEED\",\"ui_name\":\"Call features rRNA SEED\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_tRNA_trnascan\",\"ui_name\":\"Call features tRNA trnascan\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n    \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_selenoproteins\",\"ui_name\":\"Call selenoproteins\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_pyrrolysoproteins\",\"ui_name\":\"Call pyrrolysoproteins\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_repeat_region_SEED\",\"ui_name\":\"Call features repeat region SEED\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_insertion_sequences\",\"ui_name\":\"Call features insertion sequences\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_strep_suis_repeat\",\"ui_name\":\"Call features strep suis repeat\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_strep_pneumo_repeat\",\"ui_name\":\"Call features strep pneumo repeat\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_crispr\",\"ui_name\":\"Call features crispr\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_CDS_glimmer3\",\"ui_name\":\"Call features CDS glimmer3\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_CDS_prodigal\",\"ui_name\":\"Call features CDS prodigal\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"annotate_proteins_kmer_v2\",\"ui_name\":\"Annotate proteins kmer v2\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"1\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"kmer_v1_parameters\",\"ui_name\":\"Kmer v1 parameters\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"1\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"annotate_proteins_similarity\",\"ui_name\":\"Annotate proteins similarity\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n    \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"1\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"retain_old_anno_for_hypotheticals\",\"ui_name\":\"Retain old annotations for hypotheticals\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n    \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"resolve_overlapping_features\",\"ui_name\":\"Resolve overlapping features\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"find_close_neighbors\",\"ui_name\":\"Find close neighbors\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n            \\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"1\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}},{\"id\":\"call_features_prophage_phispy\",\"ui_name\":\"Call features prophage phispy\\n\",\"short_hint\":\"See manual page for description of annotation pipieline\\n\",\"description\":\"See manual page for description of annotation pipieline\\n\",\"field_type\":\"checkbox\",\"allow_multiple\":0,\"optional\":0,\"advanced\":1,\"disabled\":0,\"ui_class\":\"parameter\",\"default_values\":[\"0\"],\"checkbox_options\":{\"checked_value\":1,\"unchecked_value\":0}}],\"fixed_parameters\":[],\"behavior\":{\"kb_service_url\":\"\",\"kb_service_name\":\"genome_annotation\",\"kb_service_method\":\"annotate_genome\",\"kb_service_input_mapping\":[{\"input_parameter\":\"input_genome\",\"target_property\":\"input_genome\"},{\"input_parameter\":\"call_features_rRNA_SEED\",\"target_property\":\"call_features_rRNA_SEED\"},{\"input_parameter\":\"call_features_tRNA_trnascan\",\"target_property\":\"call_features_tRNA_trnascan\"},{\"input_parameter\":\"call_selenoproteins\",\"target_property\":\"call_selenoproteins\"},{\"input_parameter\":\"call_pyrrolysoproteins\",\"target_property\":\"call_pyrrolysoproteins\"},{\"input_parameter\":\"call_features_repeat_region_SEED\",\"target_property\":\"call_features_repeat_region_SEED\"},{\"input_parameter\":\"call_features_insertion_sequences\",\"target_property\":\"call_features_insertion_sequences\"},{\"input_parameter\":\"call_features_strep_suis_repeat\",\"target_property\":\"call_features_strep_suis_repeat\"},{\"input_parameter\":\"call_features_strep_pneumo_repeat\",\"target_property\":\"call_features_strep_pneumo_repeat\"},{\"input_parameter\":\"call_features_crispr\",\"target_property\":\"call_features_crispr\"},{\"input_parameter\":\"call_features_CDS_glimmer3\",\"target_property\":\"call_features_CDS_glimmer3\"},{\"input_parameter\":\"call_features_CDS_prodigal\",\"target_property\":\"call_features_CDS_prodigal\"},{\"input_parameter\":\"annotate_proteins_kmer_v2\",\"target_property\":\"annotate_proteins_kmer_v2\"},{\"input_parameter\":\"kmer_v1_parameters\",\"target_property\":\"kmer_v1_parameters\"},{\"input_parameter\":\"annotate_proteins_similarity\",\"target_property\":\"annotate_proteins_similarity\"},{\"input_parameter\":\"resolve_overlapping_features\",\"target_property\":\"resolve_overlapping_features\"},{\"input_parameter\":\"find_close_neighbors\",\"target_property\":\"find_close_neighbors\"},{\"input_parameter\":\"call_features_prophage_phispy\",\"target_property\":\"call_features_prophage_phispy\"},{\"input_parameter\":\"output_genome\",\"generated_value\":{\"prefix\":\"genome_\"},\"target_property\":\"output_genome\"},{\"narrative_system_variable\":\"workspace\",\"target_property\":\"workspace\"}],\"kb_service_output_mapping\":[{\"input_parameter\":\"output_genome\",\"target_property\":\"id\"},{\"narrative_system_variable\":\"workspace\",\"target_property\":\"ws\"}]}}', 'cellId' : 'kb-cell-11-c6e9c978-a126-4c35-81a0-269c021de3c7'});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Annotate Microbial Genome", "icon": "<div class=\"fa-stack fa-2x\"><i class=\"fa fa-square fa-stack-2x method-icon\"></i><i class=\"fa fa-inverse fa-stack-1x fa-cube\"></i></div>"}, "kb-cell": {"widget_state": [{"state": {"runningState": {"outputState": true, "runState": "input"}, "jobDetails": null, "params": {"call_pyrrolysoproteins": 0, "call_features_strep_suis_repeat": 0, "call_features_strep_pneumo_repeat": 0, "call_selenoproteins": 0, "kmer_v1_parameters": 1, "call_features_CDS_prodigal": 0, "call_features_crispr": 0, "call_features_rRNA_SEED": 0, "call_features_tRNA_trnascan": 0, "annotate_proteins_similarity": 1, "retain_old_anno_for_hypotheticals": 0, "call_features_insertion_sequences": 0, "annotate_proteins_kmer_v2": 1, "find_close_neighbors": 1, "resolve_overlapping_features": 0, "output_genome": null, "call_features_CDS_glimmer3": 0, "input_genome": "", "call_features_repeat_region_SEED": 0, "call_features_prophage_phispy": 0}, "minimized": false}, "time": 1453783446936}], "widget": "null", "type": "function_input", "method": {"info": {"subtitle": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.\n", "name": "Annotate Microbial Genome", "output_types": ["KBaseGenomes.Genome"], "namespace": null, "tooltip": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.\n", "input_types": ["KBaseGenomes.Genome"], "authors": ["chenry", "olson"], "ver": "1.0.0", "id": "reannotate_microbial_genome", "categories": ["active"], "icon": {"url": "img?method_id=reannotate_microbial_genome&image_name=icon.png"}}, "parameters": [{"field_type": "text", "ui_name": "Genome\n", "allow_multiple": 0, "description": "A genome (set of DNA contigs) including structural and functional annotations\n", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "disabled": 0, "short_hint": "A genome (set of DNA contigs) including structural and functional annotations\n", "default_values": [""], "ui_class": "input", "optional": 0, "id": "input_genome", "advanced": 0}, {"field_type": "text", "ui_name": "Output Genome Name\n", "allow_multiple": 0, "description": "A genome with updated structural and functional annotations\n", "text_options": {"is_output_name": 1, "placeholder": "Name to assign genome\n", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "disabled": 0, "short_hint": "A genome with updated structural and functional annotations\n", "default_values": [""], "ui_class": "output", "optional": 1, "id": "output_genome", "advanced": 0}, {"field_type": "checkbox", "ui_name": "Call features rRNA SEED\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_rRNA_SEED", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features tRNA trnascan\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n    \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_tRNA_trnascan", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call selenoproteins\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_selenoproteins", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call pyrrolysoproteins\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_pyrrolysoproteins", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features repeat region SEED\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_repeat_region_SEED", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features insertion sequences\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_insertion_sequences", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features strep suis repeat\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_strep_suis_repeat", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features strep pneumo repeat\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_strep_pneumo_repeat", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features crispr\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_crispr", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features CDS glimmer3\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_CDS_glimmer3", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features CDS prodigal\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_CDS_prodigal", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Annotate proteins kmer v2\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["1"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "annotate_proteins_kmer_v2", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Kmer v1 parameters\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["1"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "kmer_v1_parameters", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Annotate proteins similarity\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n    \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["1"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "annotate_proteins_similarity", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Retain old annotations for hypotheticals\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n    \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "retain_old_anno_for_hypotheticals", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Resolve overlapping features\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "resolve_overlapping_features", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Find close neighbors\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n            \n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["1"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "find_close_neighbors", "advanced": 1}, {"field_type": "checkbox", "ui_name": "Call features prophage phispy\n", "allow_multiple": 0, "description": "See manual page for description of annotation pipieline\n", "optional": 0, "disabled": 0, "short_hint": "See manual page for description of annotation pipieline\n", "default_values": ["0"], "ui_class": "parameter", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "id": "call_features_prophage_phispy", "advanced": 1}], "fixed_parameters": [], "replacement_text": "Annotated the microbial genome named {{{input_genome}}}", "behavior": {"kb_service_name": "genome_annotation", "kb_service_url": "", "kb_service_method": "annotate_genome", "kb_service_input_mapping": [{"target_property": "input_genome", "input_parameter": "input_genome"}, {"target_property": "call_features_rRNA_SEED", "input_parameter": "call_features_rRNA_SEED"}, {"target_property": "call_features_tRNA_trnascan", "input_parameter": "call_features_tRNA_trnascan"}, {"target_property": "call_selenoproteins", "input_parameter": "call_selenoproteins"}, {"target_property": "call_pyrrolysoproteins", "input_parameter": "call_pyrrolysoproteins"}, {"target_property": "call_features_repeat_region_SEED", "input_parameter": "call_features_repeat_region_SEED"}, {"target_property": "call_features_insertion_sequences", "input_parameter": "call_features_insertion_sequences"}, {"target_property": "call_features_strep_suis_repeat", "input_parameter": "call_features_strep_suis_repeat"}, {"target_property": "call_features_strep_pneumo_repeat", "input_parameter": "call_features_strep_pneumo_repeat"}, {"target_property": "call_features_crispr", "input_parameter": "call_features_crispr"}, {"target_property": "call_features_CDS_glimmer3", "input_parameter": "call_features_CDS_glimmer3"}, {"target_property": "call_features_CDS_prodigal", "input_parameter": "call_features_CDS_prodigal"}, {"target_property": "annotate_proteins_kmer_v2", "input_parameter": "annotate_proteins_kmer_v2"}, {"target_property": "kmer_v1_parameters", "input_parameter": "kmer_v1_parameters"}, {"target_property": "annotate_proteins_similarity", "input_parameter": "annotate_proteins_similarity"}, {"target_property": "resolve_overlapping_features", "input_parameter": "resolve_overlapping_features"}, {"target_property": "find_close_neighbors", "input_parameter": "find_close_neighbors"}, {"target_property": "call_features_prophage_phispy", "input_parameter": "call_features_prophage_phispy"}, {"target_property": "output_genome", "input_parameter": "output_genome", "generated_value": {"prefix": "genome_"}}, {"target_property": "workspace", "narrative_system_variable": "workspace"}], "kb_service_output_mapping": [{"target_property": "id", "input_parameter": "output_genome"}, {"target_property": "ws", "narrative_system_variable": "workspace"}]}, "widgets": {"input": "null", "output": "kbaseGenomeView"}}}}}, {"source": "<div id=\"kb-cell-out-f84f5bec-3777-454b-8012-d43b7bfaf40e\"></div>\n<script>$(\"#kb-cell-out-f84f5bec-3777-454b-8012-d43b7bfaf40e\").kbaseNarrativeOutputCell({\"data\":{\"nearCellIdx\":0,\"widget\":\"kbaseNarrativeDataCell\",\"info\":{\"id\":3,\"name\":\"gggg\",\"type\":\"KBaseFBA.FBAModel-7.0\",\"save_date\":\"2015-09-29T22:03:06+0000\",\"version\":1,\"saved_by\":\"wjriehl\",\"ws_id\":476,\"ws_name\":\"wjriehl:1423178116783\",\"chsum\":\"6a4c3472ebbd1eefaa7d969131ad701f\",\"size\":1318350,\"meta\":{\"Name\":\"Rhodo\",\"Source\":\"KBase\",\"Number gapfills\":\"0\",\"Type\":\"GenomeScale\",\"Number gapgens\":\"0\",\"Number biomasses\":\"1\",\"Number compounds\":\"1085\",\"Source ID\":\"rhodogenome.fbamdl\",\"Genome\":\"477/3/1\",\"Number compartments\":\"2\",\"Number reactions\":\"1041\"}}}, \"type\":\"viewer\", \"widget\":\"kbaseNarrativeDataCell\", \"cellId\":\"kb-cell-out-f84f5bec-3777-454b-8012-d43b7bfaf40e\", \"title\":\"Data Viewer\", \"time\":1448402102054});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "gggg", "icon": "<i class=\"fa fa-2x fa-table data-viewer-icon\"></i>"}, "kb-cell": {"widget": "kbaseNarrativeDataCell", "type": "function_output", "widget_state": [{"state": null, "time": 1453783446937}]}}}, {"execution_count": 5, "cell_type": "code", "source": "def fetch_object(name):\n    from biokbase.workspace.client import Workspace\n    import os\n    ws_name = os.environ['KB_WORKSPACE_ID']\n    ws = Workspace()\n    \n    obj = ws.get_objects([{'workspace': ws_name, 'name':name}])\n    return obj[0]", "outputs": [], "metadata": {"collapsed": false}}, {"source": "<div id=\"kb-cell-out-fbf29ad8-c865-4835-8727-d5716db94c30\"></div>\n<script>$(\"#kb-cell-out-fbf29ad8-c865-4835-8727-d5716db94c30\").kbaseNarrativeOutputCell({\"data\":{\"nearCellIdx\":2,\"widget\":\"kbaseNarrativeDataCell\",\"info\":{\"id\":3,\"name\":\"gggg\",\"type\":\"KBaseFBA.FBAModel-7.0\",\"save_date\":\"2015-09-29T22:03:06+0000\",\"version\":1,\"saved_by\":\"wjriehl\",\"ws_id\":476,\"ws_name\":\"wjriehl:1423178116783\",\"chsum\":\"6a4c3472ebbd1eefaa7d969131ad701f\",\"size\":1318350,\"meta\":{\"Name\":\"Rhodo\",\"Source\":\"KBase\",\"Number gapfills\":\"0\",\"Type\":\"GenomeScale\",\"Number gapgens\":\"0\",\"Number biomasses\":\"1\",\"Number compounds\":\"1085\",\"Source ID\":\"rhodogenome.fbamdl\",\"Genome\":\"477/3/1\",\"Number compartments\":\"2\",\"Number reactions\":\"1041\"}}}, \"type\":\"viewer\", \"widget\":\"kbaseNarrativeDataCell\", \"cellId\":\"kb-cell-out-fbf29ad8-c865-4835-8727-d5716db94c30\", \"title\":\"Data Viewer\", \"time\":1448402126200});</script>", "cell_type": "markdown", "metadata": {"kbstate": {"title": "gggg", "icon": "<i class=\"fa fa-2x fa-table data-viewer-icon\"></i>"}, "kb-cell": {"widget": "kbaseNarrativeDataCell", "type": "function_output", "widget_state": [{"state": null, "time": 1453783446937}]}}}, {"source": "Plug it into a line magic.  \n(I know you can just invoke the function above, but it's small enough that copying it is probably fine).", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Plug it into a line magic.<br>(I know you can just", "icon": ""}}}, {"execution_count": 17, "cell_type": "code", "source": "from IPython.core.magic import (register_line_magic)\n\n@register_line_magic\ndef get_data_object(name):\n    from biokbase.workspace.client import Workspace\n    import os\n    ws_name = os.environ['KB_WORKSPACE_ID']\n    ws = Workspace()\n    \n    obj = ws.get_objects([{'workspace': ws_name, 'name':name}])\n    return obj[0]", "outputs": [], "metadata": {"collapsed": false}}, {"source": "Test it out!", "cell_type": "markdown", "metadata": {"kbstate": {"title": "Test it out!", "icon": ""}}}, {"execution_count": 18, "cell_type": "code", "source": "bsub_model = %get_data_object bsub_model", "outputs": [], "metadata": {"collapsed": false}}, {"execution_count": 19, "cell_type": "code", "source": "bsub_model.keys()", "outputs": [{"execution_count": 19, "output_type": "execute_result", "data": {"text/plain": "[u'info',\n u'created',\n u'refs',\n u'provenance',\n u'creator',\n u'copy_source_inaccessible',\n u'copied',\n u'data',\n u'extracted_ids']"}, "metadata": {}}], "metadata": {"collapsed": false}}, {"execution_count": 1, "cell_type": "code", "source": "from biokbase.workspace.client import Workspace\nws = Workspace('https://ci.kbase.us/services/ws')\nws.ver()", "outputs": [{"execution_count": 1, "output_type": "execute_result", "data": {"text/plain": "u'0.3.5'"}, "metadata": {}}], "metadata": {"kbstate": {"selected": false}, "collapsed": false}}, {"execution_count": null, "cell_type": "code", "source": "", "outputs": [], "metadata": {"kbstate": {"selected": true}, "collapsed": true}}], "metadata": {"kernelspec": {"display_name": "Python 2", "name": "python2", "language": "python"}, "language_info": {"mimetype": "text/x-python", "nbconvert_exporter": "python", "name": "python", "file_extension": ".py", "version": "2.7.6", "pygments_lexer": "ipython2", "codemirror_mode": {"version": 2, "name": "ipython"}}, "description": "", "format": "ipynb", "creator": "wjriehl", "data_dependencies": [], "ws_name": "wjriehl:1423178116783", "type": "KBaseNarrative.Narrative", "job_ids": {"job_usage": {"queue_time": 0, "run_time": 0}, "apps": [], "methods": []}, "name": "WS Line Magic"}}, "extracted_ids": {}}