[{"info": {"subtitle": "Generate a draft metabolic model based on an annotated genome. \n", "name": "MODELSEED - Build Metabolic Model", "output_types": ["KBaseFBA.FBAModel"], "namespace": null, "tooltip": "Generate a draft metabolic model based on an annotated genome. \n", "input_types": ["KBaseFBA.ModelTemplate", "KBaseGenomes.Genome"], "authors": [], "ver": "1.0.0", "id": "build_a_metabolic_model", "categories": ["active", "metabolic_modeling"], "icon": {"url": "img?method_id=build_a_metabolic_model&image_name=modelseed-teal.png"}}, "widgets": {"input": "null", "output": "kbaseTabTable"}, "fixed_parameters": [{"ui_name": "Template model", "description": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses four template models: (i) Gram positive microbe, (ii) Gram negative microbe, (iii) Core pathways microbe, (iv) Plant. These template models differ from each other by biomass composition and biochemical reaction functional associations. KBase users currently do not have the option to choose or alter the default template model"}], "parameters": [{"field_type": "text", "ui_class": "input", "allow_multiple": 0, "description": "A genome including functional annotations generated by KBase\n", "text_options": {"is_output_name": 0, "placeholder": "Genome ID for the model to be generated\n", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "disabled": 0, "short_hint": "A genome including functional annotations generated by KBase\n", "default_values": [""], "ui_name": "Genome\n", "optional": 0, "id": "input_genome", "advanced": 0}, {"field_type": "text", "ui_class": "output", "allow_multiple": 0, "description": "Enter a name for the metabolic model to be created.\n", "text_options": {"is_output_name": 1, "placeholder": "Output Metabolic Model Name\n", "regex_constraint": [], "valid_ws_types": ["KBaseFBA.FBAModel"]}, "disabled": 0, "short_hint": "Enter a name for the metabolic model to be created.\n", "default_values": [""], "ui_name": "Draft Model\n", "optional": 0, "id": "output_model", "advanced": 0}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "User has the option to generate a core metabolic model that contains central metabolic pathways, electron transport chains and fermentation pathways that are essential for energy biosynthesis (microbial genomes only)\n", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "User has the option to generate a core metabolic model that contains central metabolic pathways, electron transport chains and fermentation pathways that are essential for energy biosynthesis (microbial genomes only) \n", "default_values": ["0"], "ui_name": "Core only?\n", "optional": 0, "id": "core_model", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "Generate a metabolic model that includes all biochemical reactions in the entire database\n", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Generate a metabolic model that includes all biochemical reactions in the entire database\n", "default_values": ["0"], "ui_name": "Full database?\n", "optional": 0, "id": "full_db_model", "advanced": 1}, {"field_type": "text", "ui_class": "input", "allow_multiple": 0, "description": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses four template models: (i) Gram positive microbe, (ii) Gram negative microbe, (iii) Core pathways microbe, and (iv) Plant. These template models differ from each other by biomass composition and biochemical reaction functional associations. KBase users currently do not have the option to choose or alter the default template model.\n", "text_options": {"is_output_name": 0, "placeholder": "Template model name\n", "regex_constraint": [], "valid_ws_types": ["KBaseFBA.ModelTemplate"]}, "disabled": 0, "short_hint": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses four template models: (i) Gram positive microbe, (ii) Gram negative microbe, (iii) Core pathways microbe, and (iv) Plant. These template models differ from each other by biomass composition and biochemical reaction functional associations. KBase users currently do not have the option to choose or alter the default template model.\n", "default_values": [""], "ui_name": "Template model\n", "optional": 1, "id": "template_model", "advanced": 1}], "behavior": {"kb_service_method": "genome_to_fbamodel", "kb_service_output_mapping": [{"target_property": "type", "constant_value": "KBaseFBA.FBAModel"}, {"target_property": "obj", "input_parameter": "output_model"}, {"target_property": "ws", "narrative_system_variable": "workspace"}], "kb_service_name": "KBaseFBAModeling", "kb_service_input_mapping": [{"target_property": "genome", "input_parameter": "input_genome"}, {"target_property": "model", "input_parameter": "output_model"}, {"target_property": "coremodel", "input_parameter": "core_model"}, {"target_property": "fulldb", "input_parameter": "full_db_model"}, {"target_property": "templatemodel", "input_parameter": "template_model"}, {"target_property": "workspace", "narrative_system_variable": "workspace"}], "kb_service_url": ""}}, {"info": {"subtitle": "View RNASeqAnalysis\n", "name": "View RNASeqAnalysis", "output_types": [], "namespace": null, "tooltip": "View RNASeqAnalysis\n", "input_types": ["KBaseRNASeq.RNASeqAnalysis"], "authors": [], "ver": "1.0.0", "id": "view_rnaseq_analysis", "categories": ["viewers"]}, "widgets": {"input": "null", "output": "kbaseRNASeqAnalysis"}, "fixed_parameters": [], "parameters": [{"field_type": "text", "ui_class": "input", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqAnalysis"]}, "disabled": 0, "short_hint": "Select a RNASeqAnalysis object to view\n", "default_values": [""], "ui_name": "RNASeqAnalysis\n", "optional": 0, "id": "param0", "advanced": 0}], "behavior": {"output_mapping": [{"target_property": "output", "input_parameter": "param0"}, {"target_property": "workspace", "narrative_system_variable": "workspace"}]}}, {"info": {"subtitle": "Annotate bacterial or archaeal contigs using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).\n", "name": "RASTtk - Annotate Microbial Contigs", "output_types": ["KBaseGenomes.Genome"], "namespace": null, "tooltip": "Annotate bacterial or archaeal contigs using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).\n", "input_types": ["KBaseGenomes.ContigSet"], "authors": ["chenry", "olson"], "ver": "1.0.0", "id": "annotate_contigset", "categories": ["active", "annotation"], "icon": {"url": "img?method_id=annotate_contigset&image_name=rast-red.png"}}, "widgets": {"input": "null", "output": "kbaseGenomeView"}, "fixed_parameters": [], "parameters": [{"field_type": "text", "ui_class": "input", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.ContigSet"]}, "disabled": 0, "short_hint": "The set of contig sequences to annotate\n", "default_values": [""], "ui_name": "Contig Set\n", "optional": 0, "id": "input_contigset", "advanced": 0}, {"field_type": "text", "ui_class": "parameter", "allow_multiple": 0, "description": "", "disabled": 0, "short_hint": "The scientific name to assign to the genome\n", "default_values": [""], "ui_name": "Scientific Name\n", "optional": 0, "id": "scientific_name", "advanced": 0}, {"field_type": "dropdown", "ui_class": "parameter", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "B (Bacteria)", "value": "B"}, {"display": "A (Archaea)", "value": "A"}]}, "disabled": 0, "short_hint": "The domain of life of the organism being annotated\n", "default_values": ["B"], "ui_name": "Domain\n", "optional": 0, "id": "domain", "advanced": 0}, {"field_type": "dropdown", "ui_class": "parameter", "allow_multiple": 0, "description": "", "dropdown_options": {"options": [{"display": "11 (Archaea, most Bacteria, most Virii, and some Mitochondria)", "value": "11"}, {"display": "4 (Mycoplasmaea, Spiroplasmaea, Ureoplasmaea, and Fungal Mitochondria)", "value": "4"}]}, "disabled": 0, "short_hint": "The genetic code used in translating to protein sequences\n", "default_values": ["11"], "ui_name": "Genetic Code\n", "optional": 0, "id": "genetic_code", "advanced": 0}, {"field_type": "text", "ui_class": "output", "allow_multiple": 0, "description": "", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "disabled": 0, "short_hint": "Name to assign the output genome\n", "default_values": [""], "ui_name": "Output Genome Name\n", "optional": 0, "id": "output_genome", "advanced": 0}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call rRNAs\n", "default_values": ["1"], "ui_name": "Call rRNAs\n", "optional": 0, "id": "call_features_rRNA_SEED", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call tRNAs with tRNAscan\n", "default_values": ["1"], "ui_name": "Call tRNAs with tRNAscan\n", "optional": 0, "id": "call_features_tRNA_trnascan", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call selenoproteins\n", "default_values": ["1"], "ui_name": "Call selenoproteins\n", "optional": 0, "id": "call_selenoproteins", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call pyrrolysoproteins\n", "default_values": ["1"], "ui_name": "Call pyrrolysoproteins\n", "optional": 0, "id": "call_pyrrolysoproteins", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call large repeat regions\n", "default_values": ["1"], "ui_name": "Call large repeat regions\n", "optional": 0, "id": "call_features_repeat_region_SEED", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call insertion sequences\n", "default_values": ["0"], "ui_name": "Call insertion sequences\n", "optional": 0, "id": "call_features_insertion_sequences", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Find Streptococcus repeat regions\n", "default_values": ["1"], "ui_name": "Find Streptococcus repeat regions\n", "optional": 0, "id": "call_features_strep_suis_repeat", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call features strep pneumo repeat\n", "default_values": ["1"], "ui_name": "Call features strep pneumo repeat\n", "optional": 0, "id": "call_features_strep_pneumo_repeat", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call CRISPRs\n", "default_values": ["1"], "ui_name": "Call CRISPRs\n", "optional": 0, "id": "call_features_crispr", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call protein-encoding genes with Glimmer3\n", "default_values": ["1"], "ui_name": "Call protein-encoding genes with Glimmer3\n", "optional": 0, "id": "call_features_CDS_glimmer3", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Call protein-encoding genes with Prodigal\n", "default_values": ["1"], "ui_name": "Call protein-encoding genes with Prodigal\n", "optional": 0, "id": "call_features_CDS_prodigal", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Annotate protein-encoding genes with k-mers v2\n", "default_values": ["1"], "ui_name": "Annotate protein-encoding genes with k-mers v2\n", "optional": 0, "id": "annotate_proteins_kmer_v2", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Annotate remaining hypothetical proteins with k-mers\n", "default_values": ["1"], "ui_name": "Annotate remaining hypothetical proteins with k-mers\n", "optional": 0, "id": "kmer_v1_parameters", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Annotate remaining hypothetical proteins by searching against close relatives\n", "default_values": ["1"], "ui_name": "Annotate remaining hypothetical proteins by searching against close relatives\n", "optional": 0, "id": "annotate_proteins_similarity", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Perform basic gene overlap removal\n", "default_values": ["1"], "ui_name": "Perform basic gene overlap removal\n", "optional": 0, "id": "resolve_overlapping_features", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Find close neighbors\n", "default_values": ["1"], "ui_name": "Find close neighbors\n", "optional": 0, "id": "find_close_neighbors", "advanced": 1}, {"field_type": "checkbox", "ui_class": "parameter", "allow_multiple": 0, "description": "", "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "disabled": 0, "short_hint": "Find prophage elements with phispy\n", "default_values": ["0"], "ui_name": "Find prophage elements with phispy\n", "optional": 0, "id": "call_features_prophage_phispy", "advanced": 1}], "behavior": {"kb_service_method": "annotate_genome", "kb_service_output_mapping": [{"target_property": "id", "input_parameter": "output_genome"}, {"target_property": "ws", "narrative_system_variable": "workspace"}], "kb_service_name": "genome_annotation", "kb_service_input_mapping": [{"target_property": "input_contigset", "input_parameter": "input_contigset"}, {"target_property": "scientific_name", "input_parameter": "scientific_name"}, {"target_property": "domain", "input_parameter": "domain"}, {"target_property": "genetic_code", "input_parameter": "genetic_code"}, {"target_property": "call_features_rRNA_SEED", "input_parameter": "call_features_rRNA_SEED"}, {"target_property": "call_features_tRNA_trnascan", "input_parameter": "call_features_tRNA_trnascan"}, {"target_property": "call_selenoproteins", "input_parameter": "call_selenoproteins"}, {"target_property": "call_pyrrolysoproteins", "input_parameter": "call_pyrrolysoproteins"}, {"target_property": "call_features_repeat_region_SEED", "input_parameter": "call_features_repeat_region_SEED"}, {"target_property": "call_features_insertion_sequences", "input_parameter": "call_features_insertion_sequences"}, {"target_property": "call_features_strep_suis_repeat", "input_parameter": "call_features_strep_suis_repeat"}, {"target_property": "call_features_strep_pneumo_repeat", "input_parameter": "call_features_strep_pneumo_repeat"}, {"target_property": "call_features_crispr", "input_parameter": "call_features_crispr"}, {"target_property": "call_features_CDS_glimmer3", "input_parameter": "call_features_CDS_glimmer3"}, {"target_property": "call_features_CDS_prodigal", "input_parameter": "call_features_CDS_prodigal"}, {"target_property": "annotate_proteins_kmer_v2", "input_parameter": "annotate_proteins_kmer_v2"}, {"target_property": "kmer_v1_parameters", "input_parameter": "kmer_v1_parameters"}, {"target_property": "annotate_proteins_similarity", "input_parameter": "annotate_proteins_similarity"}, {"target_property": "resolve_overlapping_features", "input_parameter": "resolve_overlapping_features"}, {"target_property": "find_close_neighbors", "input_parameter": "find_close_neighbors"}, {"target_property": "call_features_prophage_phispy", "input_parameter": "call_features_prophage_phispy"}, {"target_property": "output_genome", "input_parameter": "output_genome", "generated_value": {"prefix": "genome_"}}, {"target_property": "workspace", "narrative_system_variable": "workspace"}], "kb_service_url": ""}}]